{"version":3,"sources":["screens/formScreen/formSchema.js","screens/formScreen/FormForm.jsx","screens/formScreen/FormContainer.jsx","screens/FormScreen.jsx"],"names":["formSchema","object","tfn","string","required","formatTn","tn","routingTspid","tspid","contactName","max","contactEmail","email","BasicField","_ref","label","name","type","id","uid","useUID","fieldId","concat","react_default","a","createElement","Fragment","htmlFor","formik_esm","FormForm","_ref2","initialValues","onSubmit","validationSchema","_ref3","isSubmitting","style","marginLeft","FormForm_BasicField","disabled","activateTfn","console","log","handleFormSubmit","formData","resetForm","setSubmitting","cast","FormContainer","FormForm_FormForm","FormScreen","Helmet_default","react_router_dom","to","FormContainer_FormContainer"],"mappings":"wKAEMA,EAAaC,iBAAO,CACvBC,IAAKC,mBACDC,WACAC,SAAS,gBACTC,KACJC,aAAcJ,mBACVC,WACAI,QACJC,YAAaN,mBACTC,WACAM,IAAI,IACRC,aAAcR,mBACVC,WACAQ,UCPDC,EAAa,SAAAC,GAA+B,IAA5BC,EAA4BD,EAA5BC,MAAOC,EAAqBF,EAArBE,KAAMC,EAAeH,EAAfG,KAAMC,EAASJ,EAATI,GAChCC,EAAMC,cACNC,EAAUH,GAAE,GAAAI,OAAON,EAAP,KAAAM,OAAeH,GACjC,OACGI,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KAEGH,EAAAC,EAAAC,cAAA,SAAOE,QAASN,GAAUN,GAC1BQ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAOZ,KAAMA,EAAMC,KAAMA,EAAMC,GAAIG,IACnCE,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAcZ,KAAMA,IACpBO,EAAAC,EAAAC,cAAA,aAKHI,EAAW,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,cAAeC,EAAlBF,EAAkBE,SAAlB,OACdT,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACGI,SAAUA,EACVD,cAAeA,EACfE,iBAAkBjC,GAEjB,SAAAkC,GAAA,IAAGC,EAAHD,EAAGC,aAAH,OACEZ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMQ,MAAO,CAAEC,WAAY,QACxBd,EAAAC,EAAAC,cAACa,EAAD,CAAYvB,MAAM,MAAMC,KAAK,QAC7BO,EAAAC,EAAAC,cAACa,EAAD,CAAYvB,MAAM,4BAA4BC,KAAK,iBACnDO,EAAAC,EAAAC,cAACa,EAAD,CAAYvB,MAAM,eAAeC,KAAK,gBACtCO,EAAAC,EAAAC,cAACa,EAAD,CAAYvB,MAAM,gBAAgBC,KAAK,iBACvCO,EAAAC,EAAAC,cAAA,UAAQR,KAAK,SAASsB,SAAUJ,GAAhC,gBC5BNK,EAAcC,QAAQC,IAEtBC,EAAmB,SAACC,EAAD9B,GAA4C,IAA/B+B,EAA+B/B,EAA/B+B,UAAWC,EAAoBhC,EAApBgC,cAC9CN,EAAYxC,EAAW+C,KAAKH,IAC5BC,IACAC,GAAc,IAGXE,EAAgB,kBACnBzB,EAAAC,EAAAC,cAACwB,EAAD,CACGlB,cAAe,CACZ7B,IAAK,GACLK,aAAc,GACdE,YAAa,GACbE,aAAc,IAEjBqB,SAAUW,KCEDO,UAlBI,kBAChB3B,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,KACGD,EAAAC,EAAAC,cAAA,sBAEHF,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAA,UACGF,EAAAC,EAAAC,cAAA,UACGF,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAMC,GAAG,KAAT,WAIT9B,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAC6B,EAAD","file":"static/js/5.98bd1353.chunk.js","sourcesContent":["import { string, object } from 'yup';\n\nconst formSchema = object({\n   tfn: string()\n      .required()\n      .formatTn('npa-nxx-xxxx')\n      .tn(),\n   routingTspid: string()\n      .required()\n      .tspid(),\n   contactName: string()\n      .required()\n      .max(15),\n   contactEmail: string()\n      .required()\n      .email(),\n});\n\nexport { formSchema };\n","import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useUID } from 'react-uid';\nimport PropTypes from 'prop-types';\n\nimport { formSchema } from './formSchema';\n\n// eslint-disable-next-line react/prop-types\nconst BasicField = ({ label, name, type, id }) => {\n   const uid = useUID();\n   const fieldId = id || `${name}-${uid}`;\n   return (\n      <>\n         {/* eslint-disable-next-line jsx-a11y/label-has-associated-control, jsx-a11y/label-has-for */}\n         <label htmlFor={fieldId}>{label}</label>\n         <Field name={name} type={type} id={fieldId} />\n         <ErrorMessage name={name} />\n         <br />\n      </>\n   );\n};\n\nconst FormForm = ({ initialValues, onSubmit }) => (\n   <Formik\n      onSubmit={onSubmit}\n      initialValues={initialValues}\n      validationSchema={formSchema}\n   >\n      {({ isSubmitting }) => (\n         <Form style={{ marginLeft: '30%' }}>\n            <BasicField label=\"TFN\" name=\"tfn\" />\n            <BasicField label=\"Routing Service Registrar\" name=\"routingTspid\" />\n            <BasicField label=\"Contact Name\" name=\"contactName\" />\n            <BasicField label=\"Contact Email\" name=\"contactEmail\" />\n            <button type=\"submit\" disabled={isSubmitting}>\n               Activate\n            </button>\n         </Form>\n      )}\n   </Formik>\n);\n\nFormForm.propTypes = {\n   initialValues: PropTypes.objectOf(PropTypes.string).isRequired,\n   onSubmit: PropTypes.func.isRequired,\n};\n\nexport { FormForm };\n","import React from 'react';\n\nimport { FormForm } from './FormForm';\nimport { formSchema } from './formSchema';\n\n// eslint-disable-next-line no-console\nconst activateTfn = console.log;\n\nconst handleFormSubmit = (formData, { resetForm, setSubmitting }) => {\n   activateTfn(formSchema.cast(formData));\n   resetForm();\n   setSubmitting(false);\n};\n\nconst FormContainer = () => (\n   <FormForm\n      initialValues={{\n         tfn: '',\n         routingTspid: '',\n         contactName: '',\n         contactEmail: '',\n      }}\n      onSubmit={handleFormSubmit}\n   />\n);\n\nexport { FormContainer };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Helmet from 'react-helmet';\n\nimport { FormContainer } from './formScreen/FormContainer';\n\nconst FormScreen = () => (\n   <div>\n      <Helmet>\n         <title>Form</title>\n      </Helmet>\n      <nav>\n         <ul>\n            <li>\n               <Link to=\"/\">Home</Link>\n            </li>\n         </ul>\n      </nav>\n      <h2>Form</h2>\n      <FormContainer />\n   </div>\n);\n\n// eslint-disable-next-line import/no-default-export\nexport default FormScreen;\n"],"sourceRoot":""}